// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.865
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func About() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<section id=\"about\" class=\"about-section\"><div class=\"container\"><!-- Hero --><header class=\"about-hero\"><h2>About Me</h2><h3>Not just what I do – but why I do it.</h3></header><!-- Full Intro Text --><div class=\"intro-text\"><p>Hi, I’m Shawn.</p><p>I’m a full-stack developer, product thinker, and interdisciplinary creative. My path has never been strictly linear – it’s been shaped by curiosity, collaboration, and a strong inner compass.</p><p>What unites my work is a desire to build with care: to create things that are useful, beautiful, and built on solid ground. I’ve worked in startups, non-profits, cultural initiatives, and my own independent projects. I’ve led teams, built products from scratch, coded into the night, and facilitated conversations that matter.</p><p>But beyond roles and skills, I’m interested in the spaces in between – between technology and ethics, between design and feeling, between productivity and presence.</p></div><!-- Key Threads --><h4>Some key threads of who I am:</h4><ul><li><h3>International & interdisciplinary background:</h3>I studied product management, marketing & computer science – across Ireland, Berlin, and beyond.</li><li><h3>Community & connection:</h3>I’ve co-founded communities, run festivals, and designed experiences rooted in connection.</li><li><h3>Values-driven approach:</h3>I care about sustainability, neurodiversity, and creating systems that respect complexity.</li><li><h3>Philosophy:</h3>I believe in small, good things done well – with clarity, heart, and purpose.</li></ul><!-- Outro / CTA --><div class=\"cta\"><p>This site is one way of weaving all those parts together.</p><p>I hope it gives you a sense of who I am – and the kinds of things I’d love to build with others.</p><a href=\"#contact\" class=\"cta-button\">Let’s connect</a></div></div></section>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = BaseHtml().Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
